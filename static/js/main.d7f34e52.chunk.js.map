{"version":3,"sources":["components/Weather.js","components/CurrentLocation.js","components/CityLocation.js","components/WeatherChart.js","components/WeeklyForecast.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","weatherData","CelciusTemp","Math","floor","main","temp","className","name","moment","format","weather","src","description","humidity","CurrentLocation","useState","lati","setLatitude","longi","setLongitude","setWeather","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Axios","get","process","response","data","console","log","CircularProgress","CityLocation","city","setCity","cityWeather","setCityWeather","handleSubmit","event","preventDefault","searchResponse","history","useHistory","style","backgroundImage","backgroundSize","padding","onSubmit","type","placeholder","value","onChange","target","margin","border","borderRadius","fontWeight","backgroundColor","onClick","window","location","reload","push","WeatherChart","weatherChartData","map","i","class","daily","dt","day","night","wind_speed","WeeklyForecast","setWeatherData","fetchWeeklyData","weeklyResponse","height","goBack","float","App","exact","path","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7f34e52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Weather = ({ weatherData }) => {\r\n  const CelciusTemp = Math.floor(weatherData.main.temp - 273);\r\n  return (\r\n    <div className=\"weather-data\">\r\n      <div className=\"location\">{weatherData.name}</div>\r\n      <div className=\"date\">\r\n        {moment().format(\"dddd\")}, {moment().format(\"LL\")}\r\n      </div>\r\n      <div className=\"temperature\">{CelciusTemp}&deg;C</div>\r\n      <div className=\"weatherChange\">\r\n        {weatherData.weather[0].main === \"Rain\" ? (\r\n          <div className=\"rain\">\r\n            <div className=\"weatherIcon\">\r\n              <img src=\"https://img.icons8.com/color/96/000000/rain--v2.png\" />\r\n            </div>\r\n            Take an umbrella or a raincoat\r\n          </div>\r\n        ) : weatherData.weather[0].main === \"Clouds\" ? (\r\n          <div className=\"clouds\">\r\n            <div className=\"weatherIcon\">\r\n              <img src=\"https://img.icons8.com/color/96/000000/clouds.png\" />\r\n            </div>\r\n            Make sure you wear a jacket\r\n          </div>\r\n        ) : weatherData.weather[0].main === \"Clear\" ? (\r\n          <div className=\"clear\">\r\n            <div className=\"weatherIcon\">\r\n              <img src=\"https://img.icons8.com/emoji/96/000000/sun-emoji.png\" />\r\n            </div>\r\n            Don't forget your sunglasses\r\n          </div>\r\n        ) : weatherData.weather[0].main === \"Thunderstorm\" ? (\r\n          <div className=\"thunderstorm\">\r\n            <div className=\"weatherIcon\">\r\n              <img src=\"https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-thunderstorm-weather-justicon-flat-justicon.png\" />\r\n            </div>\r\n            Wear rubber boots if going outdoors\r\n          </div>\r\n        ) : weatherData.weather[0].main === \"Drizzle\" ? (\r\n          <div className=\"drizzle\">\r\n            <div className=\"weatherIcon\">\r\n              <img src=\"https://img.icons8.com/color/96/000000/light-rain-2--v1.png\" />\r\n            </div>\r\n            Wear a hoodie\r\n          </div>\r\n        ) : weatherData.weather[0].main === \"Snow\" ? (\r\n          <div className=\"snow\">\r\n            <div className=\"weatherIcon\">\r\n              <img src=\"https://img.icons8.com/color/48/000000/snow--v1.png\" />\r\n            </div>\r\n            Put on a sweater\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"description\">\r\n        {weatherData.weather[0].main}\r\n        <br />({weatherData.weather[0].description})\r\n      </div>\r\n      <div className=\"humidity\">\r\n        <div className=\"humidityIcon\">\r\n          <img src=\"https://img.icons8.com/offices/30/000000/humidity.png\" />\r\n        </div>\r\n        {weatherData.main.humidity} %\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Weather from \"./Weather\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst CurrentLocation = () => {\r\n  const [lati, setLatitude] = useState(\"\");\r\n  const [longi, setLongitude] = useState(\"\");\r\n  const [weather, setWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setLatitude(position.coords.latitude);\r\n        setLongitude(position.coords.longitude);\r\n      });\r\n\r\n      const response = await Axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lati}&lon=${longi}&appid=${process.env.REACT_APP_API_KEY}`\r\n      );\r\n      setWeather(response.data);\r\n      console.log(response.data);\r\n    };\r\n    fetchData();\r\n  }, [lati, longi]);\r\n\r\n  return (\r\n    <div>\r\n      {typeof weather.main != \"undefined\" ? (\r\n        <div className=\"locationWeather\">\r\n          <Weather weatherData={weather} />\r\n        </div>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentLocation;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Weather from \"./Weather\";\r\nimport CurrentLocation from \"./CurrentLocation\";\r\n\r\nconst CityLocation = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityWeather, setCityWeather] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const searchResponse = await Axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`\r\n    );\r\n    setCityWeather(searchResponse.data);\r\n    setCity(\"\");\r\n  };\r\n  const refresh = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <div\r\n      className=\"cityDiv\"\r\n      style={{\r\n        backgroundImage: \"url(/weather.png)\",\r\n        backgroundSize: \"cover\",\r\n        padding: \"10%\",\r\n      }}\r\n    >\r\n      <form className=\"search\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter City\"\r\n          value={city}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          style={{\r\n            margin: \"8px\",\r\n            border: \"none\",\r\n            padding: \"10px\",\r\n            borderRadius: \"4px\",\r\n            fontWeight: \"bold\",\r\n            backgroundColor: \"rgba(200, 200, 210, 0.9)\",\r\n          }}\r\n        >\r\n          Get Weather\r\n        </button>\r\n        <button\r\n          onClick={refresh}\r\n          style={{\r\n            margin: \"5px\",\r\n            border: \"none\",\r\n            padding: \"10px\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          }}\r\n        >\r\n          <img src=\"https://img.icons8.com/android/24/000000/refresh.png\" />\r\n        </button>\r\n      </form>\r\n      <br />\r\n\r\n      {typeof cityWeather.main != \"undefined\" ? (\r\n        <div className=\"locationWeather\">\r\n          <Weather weatherData={cityWeather} />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <CurrentLocation />\r\n          <div style={{ margin: \"25px 15px\" }}>\r\n            <button\r\n              className=\"forecastBtn\"\r\n              onClick={() => history.push(`/weeklyforecast`)}\r\n            >\r\n              7 - Day Forecast\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityLocation;\r\n","import React from \"react\";\r\nimport moment, { ISO_8601 } from \"moment\";\r\n\r\nconst WeatherChart = ({ weatherChartData }) => {\r\n  return (\r\n    <>\r\n      {[0, 1, 2, 3, 4, 5, 6].map((i) => (\r\n        <div className=\"weatherDataWeek\">\r\n          <div class=\"day\">\r\n            {moment(weatherChartData.daily[i].dt * 1000).format(\"ddd\")}\r\n          </div>\r\n          <div className=\"weatherChangeWeek\">\r\n            {weatherChartData.daily[i].weather[0].main === \"Rain\" ? (\r\n              <div className=\"weatherIcon\">\r\n                <img src=\"https://img.icons8.com/color/96/000000/rain--v2.png\" />\r\n              </div>\r\n            ) : weatherChartData.daily[i].weather[0].main === \"Clear\" ? (\r\n              <div className=\"weatherIcon\">\r\n                <img src=\"https://img.icons8.com/emoji/96/000000/sun-emoji.png\" />\r\n              </div>\r\n            ) : weatherChartData.daily[i].weather[0].main === \"Thunderstorm\" ? (\r\n              <div className=\"weatherIcon\">\r\n                <img src=\"https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-thunderstorm-weather-justicon-flat-justicon.png\" />\r\n              </div>\r\n            ) : weatherChartData.daily[i].weather[0].main === \"Drizzle\" ? (\r\n              <div className=\"weatherIcon\">\r\n                <img src=\"https://img.icons8.com/color/96/000000/light-rain-2--v1.png\" />\r\n              </div>\r\n            ) : weatherChartData.daily[i].weather[0].main === \"Snow\" ? (\r\n              <div className=\"weatherIcon\">\r\n                <img src=\"https://img.icons8.com/color/48/000000/snow--v1.png\" />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <div className=\"temperatureWeek\">\r\n            Day: {weatherChartData.daily[i].temp.day}&deg;C\r\n          </div>\r\n          <div className=\"temperatureWeek\">\r\n            Night: {weatherChartData.daily[i].temp.night}&deg;C\r\n          </div>\r\n          <div className=\"wind\">\r\n            <img src=\"https://img.icons8.com/material-outlined/24/000000/wind.png\" />{\" \"}\r\n            {weatherChartData.daily[i].wind_speed} ms<sup>-1</sup>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport WeatherChart from \"./WeatherChart\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst WeeklyForecast = () => {\r\n  const [lati, setLatitude] = useState(\"\");\r\n  const [longi, setLongitude] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchWeeklyData = async () => {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setLatitude(position.coords.latitude);\r\n        setLongitude(position.coords.longitude);\r\n      });\r\n\r\n      const weeklyResponse = await Axios.get(\r\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lati}&lon=${longi}&exclude=minutely,hourly&units=metric&appid=${process.env.REACT_APP_API_KEY}`\r\n      );\r\n      setWeatherData(weeklyResponse.data);\r\n    };\r\n    fetchWeeklyData();\r\n  }, [lati, longi]);\r\n\r\n  return (\r\n    <div\r\n      className=\"dataDiv\"\r\n      style={{\r\n        backgroundImage: \"url(/weather5.jpg)\",\r\n        backgroundSize: \"cover\",\r\n        padding: \"10%\",\r\n        height: \"1200px\",\r\n      }}\r\n    >\r\n      {typeof weatherData.daily != \"undefined\" ? (\r\n        <div className=\"chartWeather\">\r\n          <button\r\n            onClick={() => history.goBack()}\r\n            style={{\r\n              backgroundColor: \"rgba(0,0,0,0)\",\r\n              border: \"none\",\r\n              float: \"left\",\r\n            }}\r\n          >\r\n            <img src=\"https://img.icons8.com/ios/50/000000/circled-left-2.png\" />\r\n          </button>\r\n          <h2>7-Day Forecast</h2>\r\n          <br />\r\n          <WeatherChart weatherChartData={weatherData} />\r\n        </div>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyForecast;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CityLocation from \"./components/CityLocation\";\r\nimport WeeklyForecast from \"./components/WeeklyForecast\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            children={\r\n              <div>\r\n                <CityLocation />\r\n              </div>\r\n            }\r\n          />\r\n          <Route path=\"/weeklyforecast\" children={<WeeklyForecast />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}